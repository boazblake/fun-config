{"version":3,"sources":["../../src/coyoneda.mjs"],"names":["Coyoneda","prototype","map","f","x","lower","lift","identity"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAMA,WAAW,mBAAO,GAAP,EAAY,GAAZ,CAAjB;;AAEAA,SAASC,SAAT,CAAmBC,GAAnB,GAAyB,UAASC,CAAT,EAAY;AACnC,SAAOH,SACL,KAAKI,CADA,EAEL,oBACED,CADF,EAEE,KAAKA,CAFP,CAFK,CAAP;AAOD,CARD;;AAUAH,SAASC,SAAT,CAAmBI,KAAnB,GAA2B,YAAW;AACpC,SAAO,KAAKD,CAAL,CAAOF,GAAP,CAAW,KAAKC,CAAhB,CAAP;AACD,CAFD;;AAIAH,SAASM,IAAT,GAAgB,UAACF,CAAD;AAAA,SAAOJ,SAASI,CAAT,EAAYG,eAAZ,CAAP;AAAA,CAAhB;;QAESP,Q,GAAAA,Q","file":"coyoneda.js","sourcesContent":["import { tagged } from 'daggy'\r\nimport { compose, identity } from 'ramda'\r\n\r\nconst Coyoneda = tagged('x', 'f')\r\n\r\nCoyoneda.prototype.map = function(f) {\r\n  return Coyoneda(\r\n    this.x,\r\n    compose(\r\n      f,\r\n      this.f\r\n    )\r\n  )\r\n}\r\n\r\nCoyoneda.prototype.lower = function() {\r\n  return this.x.map(this.f)\r\n}\r\n\r\nCoyoneda.lift = (x) => Coyoneda(x, identity)\r\n\r\nexport { Coyoneda }\r\n"]}